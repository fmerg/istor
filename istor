#!/bin/bash

usage_string="usage: $(basename "$0") <IP> [OPTIONS]

Checks if the provided IP (IPv4) belongs to a Tor exit node. It exits with

    0 if it belongs to an exit node
    1 if it does not
    2 in case of wrong usage
    3 in case of database error (see below)

Comparison is made for speed against the local database of Tor exit nodes 
established with the 'tornodes' command. Keep this database synced with
list of advertised Tor exit nodes in order to get correct results. 
See 'tornodes --help' for details.

Options
  --help, -h  Display this message and exit
  --dbamne    the local database of Tor exit nodes (default: \"tornodes\")
  --dbuser    user name of the above database (default: \"postgres\")

Examples
  $ $(basename "$0") 104.244.76.13
  $ $(basename "$0") 104.244.76.13 --dbname tornodes --dbuser postgres
"

usage() { echo -n "$usage_string" 1>&2; }

set -e
set -u
set -o pipefail


DBNAME=tornodes
DBUSER=postgres
TBNAME=exit_nodes
IP=

pos=()
while [[ $# -gt 0 ]]
do
    arg="$1"
    case $arg in
        --dbname)
            DBNAME="$2"
            shift
            shift
            ;;
        --dbuser)
            DBUSER="$2"
            shift
            shift
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        *)
            IP="$1"
            pos+=($IP)
            shift
            ;;
    esac
done


if [ ${#pos[@]} == 1 ]; then

    resp=$(sudo -u $DBUSER psql -c "SELECT EXISTS (SELECT * FROM $TBNAME WHERE ip='"$IP"');" $DBNAME)

    if [ $? == 0 ]; then

        if [ $(echo "$resp" | awk 'FNR == 3 {print $1}') == "f" ]; then
            echo false
            exit 1
        else
            echo true
            exit 0
        fi

    else
        echo
        echo "Something was wrong with the database query ^^"
        exit 3
    fi

elif [ ${#pos[@]} == 0 ]; then

    echo "[-] No IP provided"
    usage && exit 2

else

    echo "[-] Cannot provide more than one IPs"
    usage && exit 2

fi

exit 0
